1. First, tell me about yourself. Can you introduce yourself a little bit?
Explain About my current project, roles and responsibilities？
2. Okay, let's get started for the technical questions, can you explain the differences between Arraylist and Linkedlist?  when to use  ArrayList , and when to use Linkedlist?

Can you explain a real time example where you have used abstraction in you application?
1.UT/Bond Product 
2.fixedLen/CSV line parser


3, hash code equals
3. thread pool 
3.1 Why use thread pools and what are the benefits of thread pools?
线程池，简单的来说就是管理了一堆线程的地方，这里的线程在执行完任务之后不是进行销毁，而是进行阻塞等待继续获取任务，从而实现了线程的重复利用，降低了线程的创建和销毁的资源消耗。

3.2 What are the parameters of the thread pool?
corePoolSize：线程池中用来工作的核心的线程数量。
maximumPoolSize：最大线程数，线程池允许创建的最大线程数。
keepAliveTime：超出 corePoolSize 后创建的线程存活时间(当超过核心线程数后，又没有线程任务执行，达到该存活时间后，停止该线程)。
unit：keepAliveTime 的时间单位。
workQueue：任务队列，是一个阻塞队列，当线程数已达到核心线程数，会调用该方法来存储任务。
threadFactory ：线程池内部创建线程所用的工厂。
handler：拒绝策略；当队列已满并且线程数量达到最大值时，会调用该方法处理该任务。

You have thread T1, T2, and T3, how will you ensure that thread T2 run after T1 and thread T3 run after T2?
5个方法: 1) 3个object 的wiat/nofity
2)Lock api new 3 conditions
3)Locksupport.park()/unpark()
4)三个线程之间Thread.join()
5)使用两个countdownlatch

What is BlockingQueue ? Write code to implement a blocking queue
使用场景, 输入经纬度, 同时异步调用高德/腾讯、百度地图的api， 谁先返回就放到阻塞队列里面

What is a race condition? How will you find and solve the race conditions?
多线程访问共享数据
1.不变模式，例如String类
2.Thread local
3.Synchronized/lock api
4.Volatile 关键字
5.Atomic 类，本质CAS
6.编写线程安全的类
线程封闭技术,比如对象在方法类中没有逃逸，就不会有线程安全问题

3.3 how does a thread pool work?
1）线程池刚创建时，里面没有一个线程。
2）当调用 execute() 方法添加一个任务时，线程池会做如下判断：

如果正在运行的线程数量小于 corePoolSize，那么马上创建线程运行这个任务
如果正在运行的线程数量大于或等于 corePoolSize，那么将这个任务放入队列；
如果这时候队列满了，而且正在运行的线程数量小于 maximumPoolSize，那么还是要创建非核心线程立刻运行这个任务；
如果队列满了，而且正在运行的线程数量大于或等于 maximumPoolSize，那么线程池会拒绝这个任务，调用RejectedExecutionHandler 来对被拒绝掉的任务进行处理。
 3）当一个线程完成任务时，它会从阻塞队列中来尝试获取下一个任务来执行，如果没有获取到，那么线程就会进入阻塞状态。
4）当一个线程超过一定的时间（keepAliveTime）时没有获取到任务的时候，线程池会判断，如果当前运行的线程数大于 corePoolSize，那么这个线程就被停掉，退出。所以线程池的所有任务完成后，它最终会收缩到 corePoolSize 的大小。
8）如果设置了允许核心线程数超时，那么核心线程也会退出。

3.4 how many abort policys in thead pool?
AbortPolicy：丢弃任务，抛出运行时异常。
CallerRunsPolicy：有提交任务的线程来执行任务。
DiscardPolicy：丢弃这个任务，但是不抛异常
DiscardOldestPolicy：从队列中剔除最先进入队列的任务，然后再次提交任务

3.5 What kinds of thread pools come with the JDK? (do you know any built-in thread pool?) and what are the differences between them?
newFixedThreadPool
newSingleThreadExecutor
newCachedThreadPool
newScheduledThreadPool

3.6 (What should I pay attention to when using thread pools?)使用线程池有什么要注意的地方?
自定义线程池, 设置合理的线程池参数, 设置有意义的线程池名称, 拒绝策略, 异常处理, 线程隔离

3.7 How to set the size of the number of core threads properly?
核心线程数的设置主要取决于业务是IO密集型还是CPU密集型。
CPU密集型指的是任务主要使用来进行大量的计算，没有什么导致的线程阻塞。一般这种场景的线程池核心线程数设置为CPU核心数+1。
IO密集型：当执行任务需要大量的io，比如磁盘io，网络io，可能会存在大量的阻塞，所以在IO密集型任务中使用多线程可以大大地加速任务的处理。一般核心线程数设置为 2*CPU核心数
Java中用来获取CPU核心数的方法是：Runtime.getRuntime().availableProcessors();

How do you handle an unhandled exception in the thread
//全局应用
Thread.setDefaultUncaughtExceptionHandler((thread, exception) -> {
    // Handle the uncaught exception here
    System.err.println("Unhandled exception in thread: " + thread.getName());
    exception.printStackTrace();
});

What do you mean by inter-thread communication and how it is done?
线程间通信, 一个线程传递信息给另外一个线程。
1.共享变量 + synchronized/lock api
2.Wait/ notify/ or lock api 的condition
3.Blocking Queues
4.CountDownLatch
5.CyclicBarrier

3.8 For spring boot app,  if you need to use thread pool to handle different kinds of business logics,  what do you think we should share the same thread pool, or define other one, why?

4.  who does the volatile keyword do in java, when to use it, the difference between volatile and synchronized keyword?
5. The use of the synchronized keyword, the difference between jdk lock api
6. explain AQS?
7. explain ThreadLocal, where do you use Theadlocal in you project?
7. explain JMM? 
8. what is process, thread, and coroutine, different between coroutine and thread
9. what is system call? 
what is virtual memory, what algo does OS to manage the virtaul memory?
10. in OS, 
3. what is NIO? what is the diferenece between IO and NIO? now that we alrady have NIO, why do we still use the IO?. 

how do you use design patterns, how do you use it to solve the business or technical question?

share me one or two your most impressive case you help your team to solve the problem(production incident)
2. explain the INNO DB in mysql?
3. explian index in DB
聚簇索引和非聚簇索引
MySQL 回表
1. why DB use B-tree not hashmap or other search tree

1. K8s rolling update
2. the k8s config map and config secret?
K8S网络模型

explain how spring boot starter work?
spring cloud componets?
when use spring cloud feign client, what should we pay attention to?

what is drawback of mircoserivce?
explain CAP theory

how you current job to implement the discover service? Eureka or K8s service?
how does Eureka work?

if you spring boot CPU is high, how can you do the trouble shooting(linux comand)

对象的生命周期(object lifecycle)
young GC and full GC 
why JVM use different to distinguish the object generation

how you company implement  DevOps, (which tool or command)

what did you use Netty do?( netty rector model, why netty define its own buffer)?

In what business scenarios do you use message queues？


编程题目:
How to find duplicate elements in a given integers list in java using Stream functions?
Set<Integer> uniqueElements = new HashSet<>();
List<Integer> duplicateElements = numbers.stream()
        .filter(n -> !uniqueElements.add(n))
        .distinct()
        .collect(Collectors.toList());

Given a String, find the first repeated character in it using Stream functions
The same as above